import React from 'react';

import { View ,Button ,FlatList, Text} from 'react-native';
import { DotsLoader } from 'react-native-indicator';
import { SearchBar, Icon } from 'react-native-elements';

import { AuthContext } from '../helper/context/auth-context';
import {api_get_search_result } from '../helper/api_url';


import { fetch_url_get } from '../helper/function/common-function/fetch';
import SearchList from '../components/search_list';
import { primaryColor, title_search_color } from '../helper/color';
import ImageBackgroundGlobal from '../components/image_background_global';

class Query extends React.Component {

    static contextType = AuthContext;

    constructor(props) {
        super(props)
        this.state = {
            guest: null,
            products: null,
            isLoading: false,
            IdCategories : null,
            titre: null,
            stringToSearch : null ,
            mode : false 
        }
    }

    updateSearch = (search) => {
        this.setState({ search });
    };

    getGuest = async () => {
        var guest = null;
        guest = await this.context.getGuest();
        if(guest){
            this.setState({
                guest: guest
            });
            this.context.guest = guest;
        }
    }

    getProduct = async () => {

        
        var products = null;      

       console.log( api_get_search_result +  + '&language=1')
        products = await fetch_url_get(api_get_search_result + this.props.route.params.data + '&language=1' );
        this.setState({
            products: products.product
        });
        
    }

    displayLoading = () => {
        if(this.state.isLoading){
            return(
                <View style={{
                    flex: 1,
                    alignItems: 'center',
                    justifyContent: 'center'
                }}>
                    <DotsLoader color={primaryColor} betweenSpace={20} size={20}/>
                </View>
            )
        }
    }

    displayProduct = () => {
        if(!this.state.isLoading && this.state.products){
            return(
                <SearchList products={this.state.products.product} navigation={this.props.navigation}/>
            );
        }
    }

    displayTitre = (titre) => {
        if(this.state.titre){
            return(
                <Text style={{ color: '#000000', fontSize: 16 }}> { titre } </Text>
            );
        }
    }

    async componentDidMount(){
        this.setState({
            IdCategories: this.props.route.params.data.IdCategorie,
            titre: this.props.route.params.data.SousSousSousTitre,

        });
        this.setState({
            isLoading: true,
        });
        
        
        await this.getGuest();
        await this.getProduct();
        this.setState({
            isLoading: false,
        });
        
    }

    componentDidUpdate(prevProps){
    }

    render(){

        // console.log(this.props.route.params.data);
        
        
        // onSubmitEditing={()=> {
        //     this.setState({stringToSearch : this.state.search})
        // }}
        return(
            <View style={{flex: 1, maxWidth: '100%', marginBottom: '2%'}}>
                <View style={{
                    height: 50,
                    padding: '2%',
                }}>
                    <SearchBar
                        returnKeyType='search'
                        onSubmitEditing={()=> {
                           this.props.route.params.data = this.state.search
                           this.getProduct()
                        }}
                        placeholder="Search..."
                        onChangeText={this.updateSearch}
                        value={this.state.search}
                        inputContainerStyle={{
                            borderRadius: 50,
                            backgroundColor: '#FFFFFF',
                            height: '90%',
                        }}
                        containerStyle={{
                            backgroundColor: '#FFFFFF',
                            borderBottomWidth: 0,
                            borderTopWidth: 0,
                            height: '100%',
                            width: '100%',
                            padding: 0,
                            alignItems:'center',
                            justifyContent: 'center',
                            borderRadius: 50,
                            flex: 1
                        }}
                        inputStyle={{
                            fontSize: 14
                        }}
                        searchIcon={() => {
                            return(
                                <Icon 
                                    type="font-awesome"
                                    name="search"
                                    size={18}
                                    iconStyle={{ paddingLeft: 5 }}
                                />
                            )
                        }}
                    />
                </View>
                
                { this.displayLoading() }
                { this.displayProduct() }
            </View>   
        );
    }
}

export default Query;